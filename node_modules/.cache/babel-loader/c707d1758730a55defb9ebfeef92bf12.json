{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport { LocationProvider } from './LocationProvider';\nimport shallowEqual from './shallowEqual'; // we use a lazy caching solution to prevent #46 from happening\n\nvar cachedWindowHistory;\nvar cachedAdaptedWindowHistory;\n/**\n * Adapts standard DOM window history to work with our\n * { replace, push } interface.\n *\n * @param history Standard history provided by DOM\n */\n\nfunction adaptWindowHistory(history) {\n  if (history === cachedWindowHistory && cachedAdaptedWindowHistory != null) {\n    return cachedAdaptedWindowHistory;\n  }\n\n  var adaptedWindowHistory = {\n    replace: function (location) {\n      history.replaceState(location.state, '', location.protocol + \"//\" + location.host + location.pathname + location.search);\n    },\n    push: function (location) {\n      history.pushState(location.state, '', location.protocol + \"//\" + location.host + location.pathname + location.search);\n    },\n\n    get location() {\n      return window.location;\n    }\n\n  };\n  cachedWindowHistory = history;\n  cachedAdaptedWindowHistory = adaptedWindowHistory;\n  return adaptedWindowHistory;\n} // we use a lazy caching solution to prevent #46 from happening\n\n\nvar cachedReachHistory;\nvar cachedAdaptedReachHistory;\n/**\n * Adapts @reach/router history to work with our\n * { replace, push } interface.\n *\n * @param history globalHistory from @reach/router\n */\n\nfunction adaptReachHistory(history) {\n  if (history === cachedReachHistory && cachedAdaptedReachHistory != null) {\n    return cachedAdaptedReachHistory;\n  }\n\n  var adaptedReachHistory = {\n    replace: function (location) {\n      history.navigate(location.protocol + \"//\" + location.host + location.pathname + location.search, {\n        replace: true\n      });\n    },\n    push: function (location) {\n      history.navigate(location.protocol + \"//\" + location.host + location.pathname + location.search, {\n        replace: false\n      });\n    },\n\n    get location() {\n      return history.location;\n    }\n\n  };\n  cachedReachHistory = history;\n  cachedAdaptedReachHistory = adaptedReachHistory;\n  return adaptedReachHistory;\n}\n/**\n * Helper to produce the context value falling back to\n * window history and location if not provided.\n */\n\n\nexport function getLocationProps(_a) {\n  var _b = _a === void 0 ? {} : _a,\n      history = _b.history,\n      location = _b.location;\n\n  var hasWindow = typeof window !== 'undefined';\n\n  if (hasWindow) {\n    if (!history) {\n      history = adaptWindowHistory(window.history);\n    }\n\n    if (!location) {\n      location = window.location;\n    }\n  }\n\n  if (!location) {\n    throw new Error(\"\\n        Could not read the location. Is the router wired up correctly?\\n      \");\n  }\n\n  return {\n    history: history,\n    location: location\n  };\n}\n/**\n * Context provider for query params to have access to the\n * active routing system, enabling updates to the URL.\n */\n\nexport function QueryParamProvider(_a) {\n  var children = _a.children,\n      ReactRouterRoute = _a.ReactRouterRoute,\n      reachHistory = _a.reachHistory,\n      history = _a.history,\n      location = _a.location,\n      stringifyOptions = _a.stringifyOptions; // cache the stringify options object so we users can just do\n  // <QueryParamProvider stringifyOptions={{ encode: false }} />\n\n  var stringifyOptionsRef = React.useRef(stringifyOptions);\n  var hasNewStringifyOptions = !shallowEqual(stringifyOptionsRef.current, stringifyOptions);\n  var stringifyOptionsCached = hasNewStringifyOptions ? stringifyOptions : stringifyOptionsRef.current;\n  React.useEffect(function () {\n    stringifyOptionsRef.current = stringifyOptionsCached;\n  }, [stringifyOptionsCached]); // if we have React Router, use it to get the context value\n\n  if (ReactRouterRoute) {\n    return React.createElement(ReactRouterRoute, null, function (routeProps) {\n      return React.createElement(LocationProvider, __assign({\n        stringifyOptions: stringifyOptionsCached\n      }, getLocationProps(routeProps)), children);\n    });\n  } // if we are using reach router, use its history\n\n\n  if (reachHistory) {\n    return React.createElement(LocationProvider, __assign({\n      stringifyOptions: stringifyOptionsCached\n    }, getLocationProps({\n      history: adaptReachHistory(reachHistory),\n      location: location\n    })), children);\n  } // neither reach nor react-router, so allow manual overrides\n\n\n  return React.createElement(LocationProvider, __assign({\n    stringifyOptions: stringifyOptionsCached\n  }, getLocationProps({\n    history: history,\n    location: location\n  })), children);\n}\nexport default QueryParamProvider;","map":{"version":3,"sources":["/Users/zahrajou/Desktop/Ever-service/node_modules/use-query-params/esm/QueryParamProvider.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","LocationProvider","shallowEqual","cachedWindowHistory","cachedAdaptedWindowHistory","adaptWindowHistory","history","adaptedWindowHistory","replace","location","replaceState","state","protocol","host","pathname","search","push","pushState","window","cachedReachHistory","cachedAdaptedReachHistory","adaptReachHistory","adaptedReachHistory","navigate","getLocationProps","_a","_b","hasWindow","Error","QueryParamProvider","children","ReactRouterRoute","reachHistory","stringifyOptions","stringifyOptionsRef","useRef","hasNewStringifyOptions","current","stringifyOptionsCached","useEffect","createElement","routeProps"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { LocationProvider } from './LocationProvider';\nimport shallowEqual from './shallowEqual';\n// we use a lazy caching solution to prevent #46 from happening\nvar cachedWindowHistory;\nvar cachedAdaptedWindowHistory;\n/**\n * Adapts standard DOM window history to work with our\n * { replace, push } interface.\n *\n * @param history Standard history provided by DOM\n */\nfunction adaptWindowHistory(history) {\n    if (history === cachedWindowHistory && cachedAdaptedWindowHistory != null) {\n        return cachedAdaptedWindowHistory;\n    }\n    var adaptedWindowHistory = {\n        replace: function (location) {\n            history.replaceState(location.state, '', location.protocol + \"//\" + location.host + location.pathname + location.search);\n        },\n        push: function (location) {\n            history.pushState(location.state, '', location.protocol + \"//\" + location.host + location.pathname + location.search);\n        },\n        get location() {\n            return window.location;\n        },\n    };\n    cachedWindowHistory = history;\n    cachedAdaptedWindowHistory = adaptedWindowHistory;\n    return adaptedWindowHistory;\n}\n// we use a lazy caching solution to prevent #46 from happening\nvar cachedReachHistory;\nvar cachedAdaptedReachHistory;\n/**\n * Adapts @reach/router history to work with our\n * { replace, push } interface.\n *\n * @param history globalHistory from @reach/router\n */\nfunction adaptReachHistory(history) {\n    if (history === cachedReachHistory && cachedAdaptedReachHistory != null) {\n        return cachedAdaptedReachHistory;\n    }\n    var adaptedReachHistory = {\n        replace: function (location) {\n            history.navigate(location.protocol + \"//\" + location.host + location.pathname + location.search, { replace: true });\n        },\n        push: function (location) {\n            history.navigate(location.protocol + \"//\" + location.host + location.pathname + location.search, { replace: false });\n        },\n        get location() {\n            return history.location;\n        },\n    };\n    cachedReachHistory = history;\n    cachedAdaptedReachHistory = adaptedReachHistory;\n    return adaptedReachHistory;\n}\n/**\n * Helper to produce the context value falling back to\n * window history and location if not provided.\n */\nexport function getLocationProps(_a) {\n    var _b = _a === void 0 ? {} : _a, history = _b.history, location = _b.location;\n    var hasWindow = typeof window !== 'undefined';\n    if (hasWindow) {\n        if (!history) {\n            history = adaptWindowHistory(window.history);\n        }\n        if (!location) {\n            location = window.location;\n        }\n    }\n    if (!location) {\n        throw new Error(\"\\n        Could not read the location. Is the router wired up correctly?\\n      \");\n    }\n    return { history: history, location: location };\n}\n/**\n * Context provider for query params to have access to the\n * active routing system, enabling updates to the URL.\n */\nexport function QueryParamProvider(_a) {\n    var children = _a.children, ReactRouterRoute = _a.ReactRouterRoute, reachHistory = _a.reachHistory, history = _a.history, location = _a.location, stringifyOptions = _a.stringifyOptions;\n    // cache the stringify options object so we users can just do\n    // <QueryParamProvider stringifyOptions={{ encode: false }} />\n    var stringifyOptionsRef = React.useRef(stringifyOptions);\n    var hasNewStringifyOptions = !shallowEqual(stringifyOptionsRef.current, stringifyOptions);\n    var stringifyOptionsCached = hasNewStringifyOptions\n        ? stringifyOptions\n        : stringifyOptionsRef.current;\n    React.useEffect(function () {\n        stringifyOptionsRef.current = stringifyOptionsCached;\n    }, [stringifyOptionsCached]);\n    // if we have React Router, use it to get the context value\n    if (ReactRouterRoute) {\n        return (React.createElement(ReactRouterRoute, null, function (routeProps) {\n            return (React.createElement(LocationProvider, __assign({ stringifyOptions: stringifyOptionsCached }, getLocationProps(routeProps)), children));\n        }));\n    }\n    // if we are using reach router, use its history\n    if (reachHistory) {\n        return (React.createElement(LocationProvider, __assign({ stringifyOptions: stringifyOptionsCached }, getLocationProps({\n            history: adaptReachHistory(reachHistory),\n            location: location,\n        })), children));\n    }\n    // neither reach nor react-router, so allow manual overrides\n    return (React.createElement(LocationProvider, __assign({ stringifyOptions: stringifyOptionsCached }, getLocationProps({ history: history, location: location })), children));\n}\nexport default QueryParamProvider;\n"]},"metadata":{},"sourceType":"module"}